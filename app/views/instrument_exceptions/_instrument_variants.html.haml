%h1 Instrument Exceptions
- if exceptions.empty?
  %h3 No Exceptions
- else
  .center
    == #{pluralize(exceptions.count, 'Exception')} of #{number_with_delimiter(total)}
  = check_box_tag :skipped, 'true', skipped
  Show skipped
  %table.table.zebra-striped
    %caption Instrument Exceptions
    %thead
      %tr
        %th Instrument ID
        %th Standard Name
        %th Composite Ticker
        %th Unknown Name
        %th Figi
        %th Sedol
        %th Isin 
        %th Cusip
        %th Variants
        %th
    %tbody
      - exceptions.each do |exception|
        - instrument = exception.instrument
        - composite = instrument.pooled_instrument
        %tr
          %td{:style => 'width:150px'}
            = exception.file_date
            %br
            = instrument.id
            - unless composite.nil?
              == /#{composite.composite_ticker}/#{composite.exchange_country}
          %td= raw instrument.standard_name
          %td VSS
          %td
            %strong= exception.name_in_datasource
          %td
            = instrument.figi
            - if instrument.is_exchange_figi
              &nbsp;(Exchange)
          %td= instrument.sedol
          %td= instrument.isin
          %td= instrument.cusip
          %td{:style => 'width:370px'}
            = text_area_tag :tat, instrument.name_variants.split('^').join(","), :style => 'height:150px'
          %td{:style => 'width:450px'}
            = radio_button_tag "disposition_#{exception.id}", 'AV'
            Accept
            %br
            = radio_button_tag "disposition_#{exception.id}", 'SK'
            Skip
            %br
            = radio_button_tag "disposition_#{exception.id}", 'IG'
            Ignore (Delete)
            %br
            = radio_button_tag "disposition_#{exception.id}", 'CE'
            Create Exception
            = text_field_tag "exception_figi_#{exception.id}", nil, :placeholder => 'Enter Correct FIGI'
